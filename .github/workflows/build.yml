name: Pre-Release Workflow

on:
  push:
    branches:
      - pre-release
  pull_request:
    branches:
      - pre-release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Get App Version
        id: get_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Build Application
        shell: bash
        run: |
            ls
            npm install
            npm run build

      - name: Commit Changes to Main Branch
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git checkout -b v${{ steps.get_version.outputs.version }}
          git add dist/
          git commit -m "Update dist folder for version ${{ steps.get_version.outputs.version }}"
          git tag -a "${{ steps.get_version.outputs.version }}" -m "Version ${{ steps.get_version.outputs.version }}"
          git push origin v${{ steps.get_version.outputs.version }} --tags
        
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false
        
      - name: Merge to Main
        run: |
            git fetch origin main
            git checkout main
            git merge v${{ steps.get_version.outputs.version }} --no-ff -m "Merge pre-release v${{ steps.get_version.outputs.version }} into main"
            git push origin main
  